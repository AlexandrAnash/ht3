{"version":3,"sources":["app.js"],"names":[],"mappings":";;AAAA;;;;;;AACA,SAAS,gBAAT,CAA0B,kBAA1B,EAA8C,YAAM;AAChD,QAAI,SAAS,SAAS,cAAT,CAAwB,eAAxB,CAAb;AACA,QAAI,gBAAgB,OAAO,UAAP,CAAkB,IAAlB,CAApB;AACA,QAAI,SAAS,SAAS,cAAT,CAAwB,QAAxB,CAAb;;AAEA,QAAI,YAAY,SAAS,aAAT,CAAuB,QAAvB,CAAhB;AACA,QAAI,mBAAmB,UAAU,UAAV,CAAqB,IAArB,CAAvB;AACA,YAAQ,GAAR,CAAY,MAAZ,EAAoB,+BAApB;AACA,QAAI,gBAAgB,SAAS,cAAT,CAAwB,gBAAxB,CAApB;AACA,WAAO,gBAAP,CAAwB,gBAAxB,EAA0C,YAAY;AAClD,eAAO,KAAP,GAAe,OAAO,UAAtB;AACA,eAAO,MAAP,GAAgB,OAAO,WAAvB;AACH,KAHD;AAIA,WAAO,gBAAP,CAAwB,MAAxB,EAAgC,YAAY;AACxC,8BAAsB,IAAtB;AACA,sBAAc,IAAd;AACA,iBAAS,IAAT,GAAgB;AACZ,gBAAI,CAAC,OAAO,MAAR,IAAkB,CAAC,OAAO,KAA9B,EAAqC;AACjC,qBAAK,MAAL,EAAa,aAAb,EAA4B,gBAA5B;AACA,4BAAY,MAAZ,EAAoB,aAApB,EAAmC,aAAnC;AACA,sCAAsB,IAAtB;AACH;AACJ;AACJ,KAVD,EAUG,CAVH;;AAYA,WAAO,gBAAP,CAAwB,OAAxB,EAAiC,YAAY;AACzC,YAAI,SAAS,SAAS,cAAT,CAAwB,eAAxB,CAAb;AACA,YAAI,gBAAgB,OAAO,UAAP,CAAkB,IAAlB,CAApB;AACA,sBAAc,KAAd;AACH,KAJD,EAIG,CAJH;;AAMA,aAAS,IAAT,CAAc,KAAd,EAAqB,aAArB,EAAoC,gBAApC,EAAsD;AAClD,YAAI,MAAM,MAAN,IAAgB,MAAM,KAA1B,EAAiC,OAAO,KAAP;AACjC,sBAAc,SAAd,CAAwB,KAAxB,EAA+B,CAA/B,EAAkC,CAAlC;AACA;AACA,YAAI,QAAQ,cAAc,YAAd,CAA2B,CAA3B,EAA8B,CAA9B,EAAiC,OAAO,KAAxC,EAA+C,OAAO,MAAtD,CAAZ;AACA;AACA,aAAK,IAAI,IAAI,CAAb,EAAgB,IAAI,MAAM,IAAN,CAAW,MAA/B,EAAuC,KAAK,CAA5C,EAA+C;AAC3C,gBAAM,IAAI,MAAM,IAAN,CAAW,CAAX,CAAV;AACA,gBAAM,IAAI,MAAM,IAAN,CAAW,IAAI,CAAf,CAAV;AACA,gBAAM,IAAI,MAAM,IAAN,CAAW,IAAI,CAAf,CAAV;AACA,gBAAM,aAAc,IAAI,CAAJ,GAAQ,IAAI,CAAZ,GAAgB,CAAjB,KAAwB,CAA3C;AACA,kBAAM,IAAN,CAAW,CAAX,IAAgB,UAAhB;AACA,kBAAM,IAAN,CAAW,IAAI,CAAf,IAAoB,UAApB;AACA,kBAAM,IAAN,CAAW,IAAI,CAAf,IAAoB,UAApB;AACH;AACD;AACA,sBAAc,YAAd,CAA2B,KAA3B,EAAkC,CAAlC,EAAqC,CAArC;AAEH;AACD;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,aAAS,WAAT,CAAqB,CAArB,EAAwB,OAAxB,EAAiC,OAAjC,EAA0C;AACtC,YAAI,eAAe,QAAQ,wBAA3B;AACA,gBAAQ,wBAAR,GAAmC,QAAnC;AACA,gBAAQ,WAAR,GAAsB,GAAtB;AACA,gBAAQ,SAAR,CAAkB,OAAlB,EAA2B,CAA3B,EAA8B,CAA9B,EAAiC,EAAE,KAAnC,EAA0C,EAAE,MAA5C;AACA,gBAAQ,WAAR,GAAsB,CAAtB;AACA,gBAAQ,wBAAR,GAAmC,YAAnC;AACH;AACJ,CAvED","file":"app.js","sourcesContent":["import SubtitlesParser from './subtitlesParser';\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n    let canvas = document.getElementById('player-canvas');\r\n    let canvasContext = canvas.getContext('2d');\r\n    let player = document.getElementById('player');\r\n\r\n    var assistant = document.createElement('canvas');\r\n    var assistantContext = assistant.getContext('2d');\r\n    console.log('aaaa', new SubtitlesParser());\r\n    var overlayCanvas = document.getElementById('overlay-canvas');\r\n    player.addEventListener('loadedmetadata', function () {\r\n        canvas.width = player.videoWidth;\r\n        canvas.height = player.videoHeight;\r\n    });\r\n    player.addEventListener('play', function () {\r\n        requestAnimationFrame(loop);\r\n        overlayCanvas.play();\r\n        function loop() {\r\n            if (!player.paused && !player.ended) {\r\n                draw(player, canvasContext, assistantContext);\r\n                postprocess(canvas, canvasContext, overlayCanvas);\r\n                requestAnimationFrame(loop);\r\n            }\r\n        };\r\n    }, 0);\r\n\r\n    player.addEventListener('pause', function () {\r\n        let canvas = document.getElementById('player-canvas');\r\n        let canvasContext = canvas.getContext('2d');\r\n        overlayCanvas.pause();\r\n    }, 0);\r\n\r\n    function draw(video, canvasContext, assistantContext) {\r\n        if (video.paused || video.ended) return false;\r\n        canvasContext.drawImage(video, 0, 0);\r\n        // Grab the pixel data from the backing canvas\r\n        var idata = canvasContext.getImageData(0, 0, canvas.width, canvas.height);\r\n        // Loop through the pixels, turning them grayscale\r\n        for (let i = 0; i < idata.data.length; i += 4) {\r\n            const r = idata.data[i];\r\n            const g = idata.data[i + 1];\r\n            const b = idata.data[i + 2];\r\n            const brightness = (3 * r + 4 * g + b) >>> 3;\r\n            idata.data[i] = brightness;\r\n            idata.data[i + 1] = brightness;\r\n            idata.data[i + 2] = brightness;\r\n        }\r\n        // Draw the pixels onto the visible canvas\r\n        canvasContext.putImageData(idata, 0, 0);\r\n\r\n    };\r\n    //function draw() {\r\n    //    var canvas = document.getElementById(\"img-1\");\r\n    //    var ctx = canvas.getContext(\"2d\");\r\n\r\n    //    ctx.globalCompositeOperation = \"multiply\";\r\n\r\n    //    ctx.fillStyle = \"blue\";\r\n    //    ctx.fillRect(10, 1, 100, 100);\r\n\r\n    //    ctx.fillStyle = \"red\";\r\n    //    ctx.fillRect(50, 50, 100, 100);\r\n    //};\r\n\r\n    function postprocess(c, context, overlay) {\r\n        var oldOperation = context.globalCompositeOperation;\r\n        context.globalCompositeOperation = 'screen';\r\n        context.globalAlpha = 0.2;\r\n        context.drawImage(overlay, 0, 0, c.width, c.height); \r\n        context.globalAlpha = 1;\r\n        context.globalCompositeOperation = oldOperation;\r\n    }\r\n});"],"sourceRoot":"/source/"}